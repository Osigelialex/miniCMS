
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Article` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Article
 * 
 */
export type ArticleModel = runtime.Types.Result.DefaultSelection<Prisma.$ArticlePayload>

export type AggregateArticle = {
  _count: ArticleCountAggregateOutputType | null
  _min: ArticleMinAggregateOutputType | null
  _max: ArticleMaxAggregateOutputType | null
}

export type ArticleMinAggregateOutputType = {
  id: string | null
  title: string | null
  slug: string | null
  content: string | null
  parentId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ArticleMaxAggregateOutputType = {
  id: string | null
  title: string | null
  slug: string | null
  content: string | null
  parentId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ArticleCountAggregateOutputType = {
  id: number
  title: number
  slug: number
  content: number
  parentId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ArticleMinAggregateInputType = {
  id?: true
  title?: true
  slug?: true
  content?: true
  parentId?: true
  createdAt?: true
  updatedAt?: true
}

export type ArticleMaxAggregateInputType = {
  id?: true
  title?: true
  slug?: true
  content?: true
  parentId?: true
  createdAt?: true
  updatedAt?: true
}

export type ArticleCountAggregateInputType = {
  id?: true
  title?: true
  slug?: true
  content?: true
  parentId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ArticleAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Article to aggregate.
   */
  where?: Prisma.ArticleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Articles to fetch.
   */
  orderBy?: Prisma.ArticleOrderByWithRelationInput | Prisma.ArticleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ArticleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Articles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Articles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Articles
  **/
  _count?: true | ArticleCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ArticleMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ArticleMaxAggregateInputType
}

export type GetArticleAggregateType<T extends ArticleAggregateArgs> = {
      [P in keyof T & keyof AggregateArticle]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateArticle[P]>
    : Prisma.GetScalarType<T[P], AggregateArticle[P]>
}




export type ArticleGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ArticleWhereInput
  orderBy?: Prisma.ArticleOrderByWithAggregationInput | Prisma.ArticleOrderByWithAggregationInput[]
  by: Prisma.ArticleScalarFieldEnum[] | Prisma.ArticleScalarFieldEnum
  having?: Prisma.ArticleScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ArticleCountAggregateInputType | true
  _min?: ArticleMinAggregateInputType
  _max?: ArticleMaxAggregateInputType
}

export type ArticleGroupByOutputType = {
  id: string
  title: string
  slug: string
  content: string
  parentId: string | null
  createdAt: Date
  updatedAt: Date
  _count: ArticleCountAggregateOutputType | null
  _min: ArticleMinAggregateOutputType | null
  _max: ArticleMaxAggregateOutputType | null
}

type GetArticleGroupByPayload<T extends ArticleGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ArticleGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ArticleGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ArticleGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ArticleGroupByOutputType[P]>
      }
    >
  >



export type ArticleWhereInput = {
  AND?: Prisma.ArticleWhereInput | Prisma.ArticleWhereInput[]
  OR?: Prisma.ArticleWhereInput[]
  NOT?: Prisma.ArticleWhereInput | Prisma.ArticleWhereInput[]
  id?: Prisma.StringFilter<"Article"> | string
  title?: Prisma.StringFilter<"Article"> | string
  slug?: Prisma.StringFilter<"Article"> | string
  content?: Prisma.StringFilter<"Article"> | string
  parentId?: Prisma.StringNullableFilter<"Article"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Article"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Article"> | Date | string
  parent?: Prisma.XOR<Prisma.ArticleNullableScalarRelationFilter, Prisma.ArticleWhereInput> | null
  children?: Prisma.ArticleListRelationFilter
}

export type ArticleOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  content?: Prisma.SortOrder
  parentId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  parent?: Prisma.ArticleOrderByWithRelationInput
  children?: Prisma.ArticleOrderByRelationAggregateInput
}

export type ArticleWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  slug?: string
  AND?: Prisma.ArticleWhereInput | Prisma.ArticleWhereInput[]
  OR?: Prisma.ArticleWhereInput[]
  NOT?: Prisma.ArticleWhereInput | Prisma.ArticleWhereInput[]
  title?: Prisma.StringFilter<"Article"> | string
  content?: Prisma.StringFilter<"Article"> | string
  parentId?: Prisma.StringNullableFilter<"Article"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Article"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Article"> | Date | string
  parent?: Prisma.XOR<Prisma.ArticleNullableScalarRelationFilter, Prisma.ArticleWhereInput> | null
  children?: Prisma.ArticleListRelationFilter
}, "id" | "slug">

export type ArticleOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  content?: Prisma.SortOrder
  parentId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ArticleCountOrderByAggregateInput
  _max?: Prisma.ArticleMaxOrderByAggregateInput
  _min?: Prisma.ArticleMinOrderByAggregateInput
}

export type ArticleScalarWhereWithAggregatesInput = {
  AND?: Prisma.ArticleScalarWhereWithAggregatesInput | Prisma.ArticleScalarWhereWithAggregatesInput[]
  OR?: Prisma.ArticleScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ArticleScalarWhereWithAggregatesInput | Prisma.ArticleScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Article"> | string
  title?: Prisma.StringWithAggregatesFilter<"Article"> | string
  slug?: Prisma.StringWithAggregatesFilter<"Article"> | string
  content?: Prisma.StringWithAggregatesFilter<"Article"> | string
  parentId?: Prisma.StringNullableWithAggregatesFilter<"Article"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Article"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Article"> | Date | string
}

export type ArticleCreateInput = {
  id?: string
  title: string
  slug: string
  content: string
  createdAt?: Date | string
  updatedAt?: Date | string
  parent?: Prisma.ArticleCreateNestedOneWithoutChildrenInput
  children?: Prisma.ArticleCreateNestedManyWithoutParentInput
}

export type ArticleUncheckedCreateInput = {
  id?: string
  title: string
  slug: string
  content: string
  parentId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  children?: Prisma.ArticleUncheckedCreateNestedManyWithoutParentInput
}

export type ArticleUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parent?: Prisma.ArticleUpdateOneWithoutChildrenNestedInput
  children?: Prisma.ArticleUpdateManyWithoutParentNestedInput
}

export type ArticleUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  parentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  children?: Prisma.ArticleUncheckedUpdateManyWithoutParentNestedInput
}

export type ArticleCreateManyInput = {
  id?: string
  title: string
  slug: string
  content: string
  parentId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ArticleUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArticleUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  parentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArticleNullableScalarRelationFilter = {
  is?: Prisma.ArticleWhereInput | null
  isNot?: Prisma.ArticleWhereInput | null
}

export type ArticleListRelationFilter = {
  every?: Prisma.ArticleWhereInput
  some?: Prisma.ArticleWhereInput
  none?: Prisma.ArticleWhereInput
}

export type ArticleOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ArticleCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  content?: Prisma.SortOrder
  parentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArticleMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  content?: Prisma.SortOrder
  parentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArticleMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  content?: Prisma.SortOrder
  parentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ArticleCreateNestedOneWithoutChildrenInput = {
  create?: Prisma.XOR<Prisma.ArticleCreateWithoutChildrenInput, Prisma.ArticleUncheckedCreateWithoutChildrenInput>
  connectOrCreate?: Prisma.ArticleCreateOrConnectWithoutChildrenInput
  connect?: Prisma.ArticleWhereUniqueInput
}

export type ArticleCreateNestedManyWithoutParentInput = {
  create?: Prisma.XOR<Prisma.ArticleCreateWithoutParentInput, Prisma.ArticleUncheckedCreateWithoutParentInput> | Prisma.ArticleCreateWithoutParentInput[] | Prisma.ArticleUncheckedCreateWithoutParentInput[]
  connectOrCreate?: Prisma.ArticleCreateOrConnectWithoutParentInput | Prisma.ArticleCreateOrConnectWithoutParentInput[]
  createMany?: Prisma.ArticleCreateManyParentInputEnvelope
  connect?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
}

export type ArticleUncheckedCreateNestedManyWithoutParentInput = {
  create?: Prisma.XOR<Prisma.ArticleCreateWithoutParentInput, Prisma.ArticleUncheckedCreateWithoutParentInput> | Prisma.ArticleCreateWithoutParentInput[] | Prisma.ArticleUncheckedCreateWithoutParentInput[]
  connectOrCreate?: Prisma.ArticleCreateOrConnectWithoutParentInput | Prisma.ArticleCreateOrConnectWithoutParentInput[]
  createMany?: Prisma.ArticleCreateManyParentInputEnvelope
  connect?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type ArticleUpdateOneWithoutChildrenNestedInput = {
  create?: Prisma.XOR<Prisma.ArticleCreateWithoutChildrenInput, Prisma.ArticleUncheckedCreateWithoutChildrenInput>
  connectOrCreate?: Prisma.ArticleCreateOrConnectWithoutChildrenInput
  upsert?: Prisma.ArticleUpsertWithoutChildrenInput
  disconnect?: Prisma.ArticleWhereInput | boolean
  delete?: Prisma.ArticleWhereInput | boolean
  connect?: Prisma.ArticleWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ArticleUpdateToOneWithWhereWithoutChildrenInput, Prisma.ArticleUpdateWithoutChildrenInput>, Prisma.ArticleUncheckedUpdateWithoutChildrenInput>
}

export type ArticleUpdateManyWithoutParentNestedInput = {
  create?: Prisma.XOR<Prisma.ArticleCreateWithoutParentInput, Prisma.ArticleUncheckedCreateWithoutParentInput> | Prisma.ArticleCreateWithoutParentInput[] | Prisma.ArticleUncheckedCreateWithoutParentInput[]
  connectOrCreate?: Prisma.ArticleCreateOrConnectWithoutParentInput | Prisma.ArticleCreateOrConnectWithoutParentInput[]
  upsert?: Prisma.ArticleUpsertWithWhereUniqueWithoutParentInput | Prisma.ArticleUpsertWithWhereUniqueWithoutParentInput[]
  createMany?: Prisma.ArticleCreateManyParentInputEnvelope
  set?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
  disconnect?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
  delete?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
  connect?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
  update?: Prisma.ArticleUpdateWithWhereUniqueWithoutParentInput | Prisma.ArticleUpdateWithWhereUniqueWithoutParentInput[]
  updateMany?: Prisma.ArticleUpdateManyWithWhereWithoutParentInput | Prisma.ArticleUpdateManyWithWhereWithoutParentInput[]
  deleteMany?: Prisma.ArticleScalarWhereInput | Prisma.ArticleScalarWhereInput[]
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type ArticleUncheckedUpdateManyWithoutParentNestedInput = {
  create?: Prisma.XOR<Prisma.ArticleCreateWithoutParentInput, Prisma.ArticleUncheckedCreateWithoutParentInput> | Prisma.ArticleCreateWithoutParentInput[] | Prisma.ArticleUncheckedCreateWithoutParentInput[]
  connectOrCreate?: Prisma.ArticleCreateOrConnectWithoutParentInput | Prisma.ArticleCreateOrConnectWithoutParentInput[]
  upsert?: Prisma.ArticleUpsertWithWhereUniqueWithoutParentInput | Prisma.ArticleUpsertWithWhereUniqueWithoutParentInput[]
  createMany?: Prisma.ArticleCreateManyParentInputEnvelope
  set?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
  disconnect?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
  delete?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
  connect?: Prisma.ArticleWhereUniqueInput | Prisma.ArticleWhereUniqueInput[]
  update?: Prisma.ArticleUpdateWithWhereUniqueWithoutParentInput | Prisma.ArticleUpdateWithWhereUniqueWithoutParentInput[]
  updateMany?: Prisma.ArticleUpdateManyWithWhereWithoutParentInput | Prisma.ArticleUpdateManyWithWhereWithoutParentInput[]
  deleteMany?: Prisma.ArticleScalarWhereInput | Prisma.ArticleScalarWhereInput[]
}

export type ArticleCreateWithoutChildrenInput = {
  id?: string
  title: string
  slug: string
  content: string
  createdAt?: Date | string
  updatedAt?: Date | string
  parent?: Prisma.ArticleCreateNestedOneWithoutChildrenInput
}

export type ArticleUncheckedCreateWithoutChildrenInput = {
  id?: string
  title: string
  slug: string
  content: string
  parentId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ArticleCreateOrConnectWithoutChildrenInput = {
  where: Prisma.ArticleWhereUniqueInput
  create: Prisma.XOR<Prisma.ArticleCreateWithoutChildrenInput, Prisma.ArticleUncheckedCreateWithoutChildrenInput>
}

export type ArticleCreateWithoutParentInput = {
  id?: string
  title: string
  slug: string
  content: string
  createdAt?: Date | string
  updatedAt?: Date | string
  children?: Prisma.ArticleCreateNestedManyWithoutParentInput
}

export type ArticleUncheckedCreateWithoutParentInput = {
  id?: string
  title: string
  slug: string
  content: string
  createdAt?: Date | string
  updatedAt?: Date | string
  children?: Prisma.ArticleUncheckedCreateNestedManyWithoutParentInput
}

export type ArticleCreateOrConnectWithoutParentInput = {
  where: Prisma.ArticleWhereUniqueInput
  create: Prisma.XOR<Prisma.ArticleCreateWithoutParentInput, Prisma.ArticleUncheckedCreateWithoutParentInput>
}

export type ArticleCreateManyParentInputEnvelope = {
  data: Prisma.ArticleCreateManyParentInput | Prisma.ArticleCreateManyParentInput[]
  skipDuplicates?: boolean
}

export type ArticleUpsertWithoutChildrenInput = {
  update: Prisma.XOR<Prisma.ArticleUpdateWithoutChildrenInput, Prisma.ArticleUncheckedUpdateWithoutChildrenInput>
  create: Prisma.XOR<Prisma.ArticleCreateWithoutChildrenInput, Prisma.ArticleUncheckedCreateWithoutChildrenInput>
  where?: Prisma.ArticleWhereInput
}

export type ArticleUpdateToOneWithWhereWithoutChildrenInput = {
  where?: Prisma.ArticleWhereInput
  data: Prisma.XOR<Prisma.ArticleUpdateWithoutChildrenInput, Prisma.ArticleUncheckedUpdateWithoutChildrenInput>
}

export type ArticleUpdateWithoutChildrenInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parent?: Prisma.ArticleUpdateOneWithoutChildrenNestedInput
}

export type ArticleUncheckedUpdateWithoutChildrenInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  parentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArticleUpsertWithWhereUniqueWithoutParentInput = {
  where: Prisma.ArticleWhereUniqueInput
  update: Prisma.XOR<Prisma.ArticleUpdateWithoutParentInput, Prisma.ArticleUncheckedUpdateWithoutParentInput>
  create: Prisma.XOR<Prisma.ArticleCreateWithoutParentInput, Prisma.ArticleUncheckedCreateWithoutParentInput>
}

export type ArticleUpdateWithWhereUniqueWithoutParentInput = {
  where: Prisma.ArticleWhereUniqueInput
  data: Prisma.XOR<Prisma.ArticleUpdateWithoutParentInput, Prisma.ArticleUncheckedUpdateWithoutParentInput>
}

export type ArticleUpdateManyWithWhereWithoutParentInput = {
  where: Prisma.ArticleScalarWhereInput
  data: Prisma.XOR<Prisma.ArticleUpdateManyMutationInput, Prisma.ArticleUncheckedUpdateManyWithoutParentInput>
}

export type ArticleScalarWhereInput = {
  AND?: Prisma.ArticleScalarWhereInput | Prisma.ArticleScalarWhereInput[]
  OR?: Prisma.ArticleScalarWhereInput[]
  NOT?: Prisma.ArticleScalarWhereInput | Prisma.ArticleScalarWhereInput[]
  id?: Prisma.StringFilter<"Article"> | string
  title?: Prisma.StringFilter<"Article"> | string
  slug?: Prisma.StringFilter<"Article"> | string
  content?: Prisma.StringFilter<"Article"> | string
  parentId?: Prisma.StringNullableFilter<"Article"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Article"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Article"> | Date | string
}

export type ArticleCreateManyParentInput = {
  id?: string
  title: string
  slug: string
  content: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ArticleUpdateWithoutParentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  children?: Prisma.ArticleUpdateManyWithoutParentNestedInput
}

export type ArticleUncheckedUpdateWithoutParentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  children?: Prisma.ArticleUncheckedUpdateManyWithoutParentNestedInput
}

export type ArticleUncheckedUpdateManyWithoutParentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ArticleCountOutputType
 */

export type ArticleCountOutputType = {
  children: number
}

export type ArticleCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  children?: boolean | ArticleCountOutputTypeCountChildrenArgs
}

/**
 * ArticleCountOutputType without action
 */
export type ArticleCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArticleCountOutputType
   */
  select?: Prisma.ArticleCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ArticleCountOutputType without action
 */
export type ArticleCountOutputTypeCountChildrenArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ArticleWhereInput
}


export type ArticleSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  slug?: boolean
  content?: boolean
  parentId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  parent?: boolean | Prisma.Article$parentArgs<ExtArgs>
  children?: boolean | Prisma.Article$childrenArgs<ExtArgs>
  _count?: boolean | Prisma.ArticleCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["article"]>

export type ArticleSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  slug?: boolean
  content?: boolean
  parentId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  parent?: boolean | Prisma.Article$parentArgs<ExtArgs>
}, ExtArgs["result"]["article"]>

export type ArticleSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  slug?: boolean
  content?: boolean
  parentId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  parent?: boolean | Prisma.Article$parentArgs<ExtArgs>
}, ExtArgs["result"]["article"]>

export type ArticleSelectScalar = {
  id?: boolean
  title?: boolean
  slug?: boolean
  content?: boolean
  parentId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ArticleOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "slug" | "content" | "parentId" | "createdAt" | "updatedAt", ExtArgs["result"]["article"]>
export type ArticleInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  parent?: boolean | Prisma.Article$parentArgs<ExtArgs>
  children?: boolean | Prisma.Article$childrenArgs<ExtArgs>
  _count?: boolean | Prisma.ArticleCountOutputTypeDefaultArgs<ExtArgs>
}
export type ArticleIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  parent?: boolean | Prisma.Article$parentArgs<ExtArgs>
}
export type ArticleIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  parent?: boolean | Prisma.Article$parentArgs<ExtArgs>
}

export type $ArticlePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Article"
  objects: {
    parent: Prisma.$ArticlePayload<ExtArgs> | null
    children: Prisma.$ArticlePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    slug: string
    content: string
    parentId: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["article"]>
  composites: {}
}

export type ArticleGetPayload<S extends boolean | null | undefined | ArticleDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ArticlePayload, S>

export type ArticleCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ArticleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ArticleCountAggregateInputType | true
  }

export interface ArticleDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Article'], meta: { name: 'Article' } }
  /**
   * Find zero or one Article that matches the filter.
   * @param {ArticleFindUniqueArgs} args - Arguments to find a Article
   * @example
   * // Get one Article
   * const article = await prisma.article.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ArticleFindUniqueArgs>(args: Prisma.SelectSubset<T, ArticleFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Article that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ArticleFindUniqueOrThrowArgs} args - Arguments to find a Article
   * @example
   * // Get one Article
   * const article = await prisma.article.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ArticleFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ArticleFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Article that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticleFindFirstArgs} args - Arguments to find a Article
   * @example
   * // Get one Article
   * const article = await prisma.article.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ArticleFindFirstArgs>(args?: Prisma.SelectSubset<T, ArticleFindFirstArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Article that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticleFindFirstOrThrowArgs} args - Arguments to find a Article
   * @example
   * // Get one Article
   * const article = await prisma.article.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ArticleFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ArticleFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Articles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticleFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Articles
   * const articles = await prisma.article.findMany()
   * 
   * // Get first 10 Articles
   * const articles = await prisma.article.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const articleWithIdOnly = await prisma.article.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ArticleFindManyArgs>(args?: Prisma.SelectSubset<T, ArticleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Article.
   * @param {ArticleCreateArgs} args - Arguments to create a Article.
   * @example
   * // Create one Article
   * const Article = await prisma.article.create({
   *   data: {
   *     // ... data to create a Article
   *   }
   * })
   * 
   */
  create<T extends ArticleCreateArgs>(args: Prisma.SelectSubset<T, ArticleCreateArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Articles.
   * @param {ArticleCreateManyArgs} args - Arguments to create many Articles.
   * @example
   * // Create many Articles
   * const article = await prisma.article.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ArticleCreateManyArgs>(args?: Prisma.SelectSubset<T, ArticleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Articles and returns the data saved in the database.
   * @param {ArticleCreateManyAndReturnArgs} args - Arguments to create many Articles.
   * @example
   * // Create many Articles
   * const article = await prisma.article.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Articles and only return the `id`
   * const articleWithIdOnly = await prisma.article.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ArticleCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ArticleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Article.
   * @param {ArticleDeleteArgs} args - Arguments to delete one Article.
   * @example
   * // Delete one Article
   * const Article = await prisma.article.delete({
   *   where: {
   *     // ... filter to delete one Article
   *   }
   * })
   * 
   */
  delete<T extends ArticleDeleteArgs>(args: Prisma.SelectSubset<T, ArticleDeleteArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Article.
   * @param {ArticleUpdateArgs} args - Arguments to update one Article.
   * @example
   * // Update one Article
   * const article = await prisma.article.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ArticleUpdateArgs>(args: Prisma.SelectSubset<T, ArticleUpdateArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Articles.
   * @param {ArticleDeleteManyArgs} args - Arguments to filter Articles to delete.
   * @example
   * // Delete a few Articles
   * const { count } = await prisma.article.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ArticleDeleteManyArgs>(args?: Prisma.SelectSubset<T, ArticleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Articles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticleUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Articles
   * const article = await prisma.article.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ArticleUpdateManyArgs>(args: Prisma.SelectSubset<T, ArticleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Articles and returns the data updated in the database.
   * @param {ArticleUpdateManyAndReturnArgs} args - Arguments to update many Articles.
   * @example
   * // Update many Articles
   * const article = await prisma.article.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Articles and only return the `id`
   * const articleWithIdOnly = await prisma.article.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ArticleUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ArticleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Article.
   * @param {ArticleUpsertArgs} args - Arguments to update or create a Article.
   * @example
   * // Update or create a Article
   * const article = await prisma.article.upsert({
   *   create: {
   *     // ... data to create a Article
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Article we want to update
   *   }
   * })
   */
  upsert<T extends ArticleUpsertArgs>(args: Prisma.SelectSubset<T, ArticleUpsertArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Articles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticleCountArgs} args - Arguments to filter Articles to count.
   * @example
   * // Count the number of Articles
   * const count = await prisma.article.count({
   *   where: {
   *     // ... the filter for the Articles we want to count
   *   }
   * })
  **/
  count<T extends ArticleCountArgs>(
    args?: Prisma.Subset<T, ArticleCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ArticleCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Article.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ArticleAggregateArgs>(args: Prisma.Subset<T, ArticleAggregateArgs>): Prisma.PrismaPromise<GetArticleAggregateType<T>>

  /**
   * Group by Article.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArticleGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ArticleGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ArticleGroupByArgs['orderBy'] }
      : { orderBy?: ArticleGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ArticleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Article model
 */
readonly fields: ArticleFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Article.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ArticleClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  parent<T extends Prisma.Article$parentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Article$parentArgs<ExtArgs>>): Prisma.Prisma__ArticleClient<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  children<T extends Prisma.Article$childrenArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Article$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArticlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Article model
 */
export interface ArticleFieldRefs {
  readonly id: Prisma.FieldRef<"Article", 'String'>
  readonly title: Prisma.FieldRef<"Article", 'String'>
  readonly slug: Prisma.FieldRef<"Article", 'String'>
  readonly content: Prisma.FieldRef<"Article", 'String'>
  readonly parentId: Prisma.FieldRef<"Article", 'String'>
  readonly createdAt: Prisma.FieldRef<"Article", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Article", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Article findUnique
 */
export type ArticleFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * Filter, which Article to fetch.
   */
  where: Prisma.ArticleWhereUniqueInput
}

/**
 * Article findUniqueOrThrow
 */
export type ArticleFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * Filter, which Article to fetch.
   */
  where: Prisma.ArticleWhereUniqueInput
}

/**
 * Article findFirst
 */
export type ArticleFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * Filter, which Article to fetch.
   */
  where?: Prisma.ArticleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Articles to fetch.
   */
  orderBy?: Prisma.ArticleOrderByWithRelationInput | Prisma.ArticleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Articles.
   */
  cursor?: Prisma.ArticleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Articles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Articles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Articles.
   */
  distinct?: Prisma.ArticleScalarFieldEnum | Prisma.ArticleScalarFieldEnum[]
}

/**
 * Article findFirstOrThrow
 */
export type ArticleFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * Filter, which Article to fetch.
   */
  where?: Prisma.ArticleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Articles to fetch.
   */
  orderBy?: Prisma.ArticleOrderByWithRelationInput | Prisma.ArticleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Articles.
   */
  cursor?: Prisma.ArticleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Articles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Articles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Articles.
   */
  distinct?: Prisma.ArticleScalarFieldEnum | Prisma.ArticleScalarFieldEnum[]
}

/**
 * Article findMany
 */
export type ArticleFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * Filter, which Articles to fetch.
   */
  where?: Prisma.ArticleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Articles to fetch.
   */
  orderBy?: Prisma.ArticleOrderByWithRelationInput | Prisma.ArticleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Articles.
   */
  cursor?: Prisma.ArticleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Articles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Articles.
   */
  skip?: number
  distinct?: Prisma.ArticleScalarFieldEnum | Prisma.ArticleScalarFieldEnum[]
}

/**
 * Article create
 */
export type ArticleCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * The data needed to create a Article.
   */
  data: Prisma.XOR<Prisma.ArticleCreateInput, Prisma.ArticleUncheckedCreateInput>
}

/**
 * Article createMany
 */
export type ArticleCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Articles.
   */
  data: Prisma.ArticleCreateManyInput | Prisma.ArticleCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Article createManyAndReturn
 */
export type ArticleCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * The data used to create many Articles.
   */
  data: Prisma.ArticleCreateManyInput | Prisma.ArticleCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Article update
 */
export type ArticleUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * The data needed to update a Article.
   */
  data: Prisma.XOR<Prisma.ArticleUpdateInput, Prisma.ArticleUncheckedUpdateInput>
  /**
   * Choose, which Article to update.
   */
  where: Prisma.ArticleWhereUniqueInput
}

/**
 * Article updateMany
 */
export type ArticleUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Articles.
   */
  data: Prisma.XOR<Prisma.ArticleUpdateManyMutationInput, Prisma.ArticleUncheckedUpdateManyInput>
  /**
   * Filter which Articles to update
   */
  where?: Prisma.ArticleWhereInput
  /**
   * Limit how many Articles to update.
   */
  limit?: number
}

/**
 * Article updateManyAndReturn
 */
export type ArticleUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * The data used to update Articles.
   */
  data: Prisma.XOR<Prisma.ArticleUpdateManyMutationInput, Prisma.ArticleUncheckedUpdateManyInput>
  /**
   * Filter which Articles to update
   */
  where?: Prisma.ArticleWhereInput
  /**
   * Limit how many Articles to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Article upsert
 */
export type ArticleUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * The filter to search for the Article to update in case it exists.
   */
  where: Prisma.ArticleWhereUniqueInput
  /**
   * In case the Article found by the `where` argument doesn't exist, create a new Article with this data.
   */
  create: Prisma.XOR<Prisma.ArticleCreateInput, Prisma.ArticleUncheckedCreateInput>
  /**
   * In case the Article was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ArticleUpdateInput, Prisma.ArticleUncheckedUpdateInput>
}

/**
 * Article delete
 */
export type ArticleDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  /**
   * Filter which Article to delete.
   */
  where: Prisma.ArticleWhereUniqueInput
}

/**
 * Article deleteMany
 */
export type ArticleDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Articles to delete
   */
  where?: Prisma.ArticleWhereInput
  /**
   * Limit how many Articles to delete.
   */
  limit?: number
}

/**
 * Article.parent
 */
export type Article$parentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  where?: Prisma.ArticleWhereInput
}

/**
 * Article.children
 */
export type Article$childrenArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
  where?: Prisma.ArticleWhereInput
  orderBy?: Prisma.ArticleOrderByWithRelationInput | Prisma.ArticleOrderByWithRelationInput[]
  cursor?: Prisma.ArticleWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ArticleScalarFieldEnum | Prisma.ArticleScalarFieldEnum[]
}

/**
 * Article without action
 */
export type ArticleDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Article
   */
  select?: Prisma.ArticleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Article
   */
  omit?: Prisma.ArticleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArticleInclude<ExtArgs> | null
}
